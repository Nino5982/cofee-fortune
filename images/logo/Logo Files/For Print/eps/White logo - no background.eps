%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2395 2286
%%HiResBoundingBox: 0 0 2394.96 2286
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2394.96 2286 re
W
q
[0.24 0 0 -0.24 0 2286] cm
q
0 0 9979.167 9523.0117 re
W*
q
[47.466084 0 0 47.462029 302.29996 302.31494] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
186.037 47.605999 m
183.838 43.688 181.464 39.897999 178.759 36.393997 c
176.086 32.872997 173.22701 29.531998 170.118 26.497997 c
168.61699 24.929996 166.960999 23.531998 165.380997 22.078997 c
162.894989 20.038998 l
162.478989 19.703999 162.072983 19.357998 161.650986 19.032997 c
160.36499 18.084997 l
156.988983 15.496997 153.386993 13.301997 149.779984 11.256997 c
147.929977 10.303997 146.148987 9.301997 144.222977 8.467997 c
143.280975 8.043997 142.326981 7.580996 141.403976 7.195996 c
138.662979 6.107996 l
137.226974 5.544996 l
135.798981 5.059996 l
132.958984 4.096995 l
130.093979 3.280995 l
129.141983 3.010995 128.197983 2.732995 127.234978 2.532995 c
124.373978 1.881995 l
123.426979 1.656995 122.459976 1.530995 121.510979 1.351995 c
120.555977 1.198995 119.614975 0.991995 118.66098 0.886995 c
115.816978 0.538995 l
114.875977 0.404995 113.928978 0.348995 112.987976 0.282995 c
110.178978 0.085995 l
107.385979 0.027995 l
106.459976 0.006995 105.537979 -0.019005 104.61998 0.025995 c
101.085838 0.092525 97.567101 0.360978 94.063766 0.831356 c
90.560432 1.301733 87.095497 1.970946 83.668976 2.838995 c
70.563004 6.3 59.408001 12.063 50.683998 18.606001 c
46.595673 21.655586 42.778339 25.013254 39.231998 28.679001 c
38.379997 29.493 37.641998 30.384001 36.866997 31.204 c
35.735996 32.438999 l
35.371998 32.854 35.030994 33.280998 34.683998 33.695 c
32.669998 36.132999 l
30.863998 38.537998 l
26.211998 44.825996 23.373999 50.300999 21.610998 54.093998 c
20.668999 55.968998 20.129997 57.468998 19.690998 58.453999 c
19.059998 59.958 l
19.056997 59.965 l
18.482998 61.498001 l
18.126997 62.517002 17.485998 63.991001 16.889997 65.995003 c
15.576998 69.956001 13.887998 75.894005 12.964997 83.659004 c
12.630998 86.648003 l
12.425998 89.803001 l
12.395998 90.342003 12.350998 90.886002 12.330998 91.438004 c
12.307998 93.113007 l
12.309998 94.241005 12.236998 95.396004 12.298998 96.573006 c
12.363998 101.283005 12.788998 106.382004 13.734998 111.756004 c
14.994998 119.021004 17.369997 126.785004 20.973997 134.60701 c
21.752996 135.068008 22.521997 135.547012 23.283997 136.039017 c
19.000996 127.738014 16.232996 119.360016 14.737997 111.564018 c
12.664997 100.954018 12.807997 91.425018 13.686997 83.74202 c
14.554997 76.03302 16.194998 70.124023 17.475998 66.181015 c
18.055998 64.185013 18.683998 62.718014 19.031998 61.703014 c
19.591997 60.178013 l
20.230997 58.682014 l
20.673998 57.704014 21.227997 56.193016 22.170998 54.349014 c
23.936998 50.610016 26.795998 45.177013 31.448997 38.972015 c
36.076996 32.776016 42.504997 25.740015 51.286995 19.437016 c
53.738438 17.669336 56.271324 16.027286 58.885654 14.510867 c
61.499985 12.994446 64.18293 11.611098 66.934486 10.360825 c
69.68605 9.110551 72.492722 7.999486 75.3545 7.02763 c
78.216263 6.055775 81.119102 5.227898 84.063004 4.544 c
87.432671 3.782949 90.834808 3.217148 94.269417 2.846598 c
97.704025 2.476048 101.14856 2.303182 104.603004 2.328 c
105.498001 2.306 106.395004 2.356 107.295006 2.4 c
110.008003 2.525 l
112.733002 2.788 l
113.645004 2.875 114.562004 2.953 115.473 3.108 c
118.223 3.517 l
119.145996 3.641 120.054001 3.868 120.973999 4.039 c
121.889999 4.237 122.820999 4.381 123.733002 4.624 c
126.486 5.326 l
127.412003 5.541 128.320007 5.836 129.233002 6.121 c
131.981003 6.980001 l
134.701004 7.982 l
136.067001 8.485001 l
136.5 8.655001 136.962006 8.863001 137.408005 9.051001 c
140.118011 10.211 l
141.015015 10.613001 141.882019 11.066 142.770004 11.494 c
144.556 12.319 146.264008 13.34 148.013 14.297001 c
151.429001 16.354 154.828003 18.543001 157.994995 21.105001 c
159.201996 22.043001 l
159.597992 22.365002 159.977997 22.706001 160.367996 23.037001 c
162.694992 25.047001 l
164.168991 26.478001 165.715988 27.847 167.109985 29.383001 c
170.00299 32.352001 172.64398 35.606003 175.10098 39.02 c
177.58998 42.416 179.74998 46.077 181.74199 49.844002 c
183.7319 53.674984 185.4399 57.627785 186.86594 61.702404 c
188.29199 65.777031 189.42168 69.932228 190.25499 74.167999 c
191.10162 78.470665 191.63602 82.811768 191.85815 87.191315 c
192.08029 91.570854 191.9879 95.943748 191.58099 100.309998 c
191.228 103.592995 l
191.07899 104.682991 190.89099 105.769997 190.72499 106.858994 c
190.63399 107.401993 190.564 107.949997 190.45699 108.48999 c
190.11998 110.108994 l
189.88098 111.18499 189.70097 112.275993 189.41399 113.340996 c
188.39198 117.629997 186.98198 121.845993 185.41998 125.945999 c
183.72098 130.074005 181.87798 134.050003 179.67699 137.888992 c
179.15599 138.860992 178.53899 139.778992 177.97499 140.725998 c
177.11099 142.136002 l
176.81898 142.602997 176.49399 143.048996 176.18799 143.507004 c
175.56299 144.414001 174.95499 145.333008 174.31599 146.230011 c
172.32199 148.862015 l
169.62482 152.319427 166.694275 155.566177 163.53035 158.60228 c
160.366409 161.638397 157.001617 164.432648 153.435989 166.985016 c
149.925552 169.49782 146.254547 171.74875 142.422989 173.73782 c
138.591431 175.72688 134.638092 177.43394 130.562988 178.85901 c
126.529991 180.23601 122.446991 181.42001 118.306992 182.18701 c
114.177994 182.98801 110.023994 183.54601 105.882996 183.72501 c
103.814995 183.888 101.749992 183.82401 99.695999 183.85501 c
96.624001 183.72202 l
96.113998 183.69601 95.602997 183.68402 95.094002 183.64702 c
93.571999 183.50201 l
89.510002 183.19601 85.533997 182.46001 81.637001 181.61502 c
79.707001 181.11302 77.765999 180.68602 75.892998 180.06003 c
74.952995 179.76202 74.004997 179.49603 73.078995 179.17403 c
70.323997 178.16502 l
69.871994 177.99602 69.396996 177.83302 68.964996 177.66103 c
67.618996 177.08803 l
64.939995 175.94702 l
62.355995 174.69102 l
61.497993 174.27402 60.637997 173.86702 59.814995 173.38803 c
57.329994 172.01202 l
56.498993 171.56403 55.721992 171.03003 54.919994 170.54602 c
54.131996 170.03902 53.314995 169.58302 52.557995 169.04102 c
50.275993 167.453018 l
49.506992 166.941025 48.785992 166.370026 48.061993 165.808014 c
45.896992 164.131012 l
43.834991 162.362015 l
43.148991 161.777008 42.46199 161.198013 41.824993 160.569016 c
40.847511 159.658356 39.891178 158.726028 38.955994 157.772018 c
37.628994 156.192017 36.374992 154.593018 35.152992 153.19902 c
32.900993 150.632019 30.559992 147.984024 28.588993 145.11702 c
26.534992 143.555023 24.342993 142.256012 21.945993 141.365021 c
12.922994 137.998016 2.339992 140.499023 0.313993 150.83902 c
-1.725007 161.183014 6.575994 170.40202 15.457994 166.830017 c
24.346992 163.251022 18.433994 154.234024 18.433994 154.234024 c
9.748994 164.907028 -1.429007 154.188019 5.214994 146.045029 c
11.863995 137.896027 24.078995 146.155029 29.294994 152.007034 c
34.511993 157.866028 37.654995 168.91904 52.032997 177.26404 c
58.994995 181.30203 65.241997 181.87204 69.838997 181.38904 c
72.023994 182.25204 l
72.975998 182.61005 73.950996 182.91304 74.918991 183.24704 c
76.847992 183.94504 78.849991 184.44205 80.844994 185.01505 c
84.872993 185.99805 88.998993 186.86905 93.228996 187.29805 c
94.813995 187.48805 l
95.343994 187.54105 95.875992 187.56805 96.409996 187.60805 c
99.616997 187.82704 l
101.763 187.85204 103.925995 187.96904 106.093994 187.85605 c
110.435997 187.77705 114.805992 187.30505 119.163994 186.57304 c
123.533997 185.87604 127.857994 184.74405 132.143997 183.39804 c
140.697998 180.63403 148.921997 176.49203 156.494003 171.26804 c
159.309998 169.26604 l
162.035995 167.129044 l
162.959991 166.432037 163.817993 165.656036 164.696991 164.902039 c
165.567993 164.138031 166.466995 163.403046 167.290985 162.585037 c
169.79298 160.159042 l
172.17798 157.612045 l
172.98898 156.776047 173.72897 155.875046 174.48297 154.987045 c
175.22697 154.090042 176.01598 153.227051 176.70697 152.286041 c
178.83797 149.506042 l
179.52197 148.559036 180.17397 147.589035 180.84196 146.629044 c
181.17096 146.146042 181.51596 145.67305 181.82997 145.179047 c
182.75697 143.689041 l
183.36197 142.688034 184.01897 141.716034 184.57997 140.689041 c
186.28397 137.617035 l
186.85597 136.600037 187.35797 135.479034 187.89597 134.41304 c
188.68797 132.793045 l
188.95398 132.251038 189.14098 131.764038 189.37097 131.24704 c
190.69298 128.187042 l
191.04997 127.24604 l
191.35097 126.420044 l
191.94997 124.768044 l
192.36897 123.674042 192.71196 122.553047 193.05096 121.432045 c
193.38297 120.308044 193.76897 119.202042 194.05096 118.064041 c
194.91597 114.659042 l
195.21198 113.526039 195.39996 112.368042 195.64497 111.224045 c
195.99197 109.504044 l
196.10197 108.930046 196.17497 108.349045 196.26697 107.771042 c
196.43797 106.614044 196.62796 105.461044 196.77896 104.30304 c
197.13396 100.818039 l
197.27696 99.659042 197.29295 98.490036 197.36696 97.327042 c
197.42596 96.16304 197.50597 95.000038 197.48895 93.835045 c
197.49796 90.345047 l
197.34395 86.863045 l
197.32095 85.702042 197.16396 84.550041 197.05396 83.397041 c
196.93095 82.245041 196.83896 81.091042 196.64296 79.950043 c
196.12296 76.52504 l
195.44395 73.13604 l
193.51396 64.142036 190.34695 55.49604 186.03696 47.606041 c
186.037 47.605999 l
h
f
Q
q
[32.187897 0 0 32.185146 3310.4478 1835.3893] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
79.239998 53.299 m
78.513 53.299 77.819 53.418999 77.153999 53.588001 c
77.239998 52.704002 77.386002 51.807003 77.399002 50.953003 c
23.485001 50.953003 l
23.67 63.033001 31.799999 78.818001 42.877998 84.065002 c
58.005997 84.065002 l
64.286995 81.090004 69.556 74.697006 73.029999 67.544006 c
74.579002 69.224007 76.775002 70.295006 79.239998 70.295006 c
83.928001 70.295006 87.726997 66.480003 87.726997 61.791008 c
87.727997 57.104 83.929001 53.299 79.239998 53.299 c
h
79.239998 66.526001 m
77.176994 66.526001 75.465996 65.183998 74.818001 63.343002 c
75.462997 61.595001 75.992004 59.847004 76.396004 58.101002 c
77.193001 57.485001 78.152 57.057003 79.240005 57.057003 c
81.850006 57.057003 83.972008 59.176003 83.972008 61.791004 c
83.972 64.406998 81.850998 66.526001 79.239998 66.526001 c
h
f*
39.423 92.350998 m
61.776001 92.350998 l
73.215004 91.306999 81.826004 88.725998 83.792 85.555 c
17.406 85.555 l
19.372 88.725998 27.983 91.306 39.423 92.350998 c
h
f*
51.457001 26.872 m
50.164001 25.337 48.834999 23.826 47.761002 22.233 c
46.82 20.839001 46.099003 19.312 45.729 17.666 c
45.188999 15.258 45.411999 12.512001 46.736 10.698 c
47.995998 8.805 49.983002 8.145001 51.029999 7.798 c
49.965 8.014 47.995998 8.51 46.177998 10.257 c
43.860996 12.479 43.699997 15.366 43.954998 18.159 c
44.343998 22.165001 46.539997 25.400002 48.990997 28.484001 c
51.194996 31.263 54.347996 34.121002 54.788998 37.862999 c
55.371998 42.878998 51.627998 47.767998 50.480999 49.555 c
51.801998 47.875 56.299999 43.778999 56.507 37.749001 c
56.655998 33.338001 54.127998 30.047001 51.457001 26.872 c
h
f
61.403999 32.310001 m
62.541 35.016003 62.926998 37.985001 61.885998 41.023003 c
61.015999 43.571003 59.256996 46.896004 57.786999 48.163002 c
59.398998 47.160004 62.134998 44.192001 63.472 41.703003 c
65.098999 38.684002 65.858002 35.504002 64.581001 31.636002 c
63.435001 28.165001 60.181999 25.494001 57.143002 23.681002 c
55.266003 22.405003 53.290001 21.194002 52.217003 19.618002 c
51.063004 18.049002 51.182003 16.197002 51.335003 15.272001 c
50.965004 16.205002 50.597004 18.007002 51.597004 19.970001 c
52.529003 21.917002 54.434006 23.499001 56.080002 25.037001 c
58.286999 27.096001 60.254002 29.575001 61.403999 32.310001 c
h
f
42.222 29.049 m
39.617001 26.445 37.866001 25.014999 37.041 22.372999 c
35.903999 18.796999 37.441002 15.15 38.598999 13.256999 c
37.070999 14.778999 34.843998 18.190998 35.350998 22.695 c
36.345997 28.768 42.242996 31.861 44.970997 36.98 c
46.774998 40.371998 45.323997 44.667999 44.526997 46.105 c
45.504997 44.871998 48.161995 40.500999 46.874996 36.123001 c
45.942001 32.959 45.104 31.931 42.222 29.049 c
h
f
Q
q
[60.957306 0 0 60.952099 1941.2188 4722.5112] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
9.08 38.799999 m
10 38 10.8 37.599998 11.440001 37.599998 c
11.960001 37.599998 12.320001 37.799999 12.480001 38.199997 c
12.6 38.599998 12.56 38.959995 12.360001 39.239998 c
12.000001 39.719997 11.56 40.079998 10.960001 40.359997 c
10.320001 40.559998 9.720001 40.679996 9.120001 40.679996 c
7.960001 40.679996 7.040001 40.399998 6.440001 39.879997 c
5.360001 39.079998 4.72 37.959999 4.480001 36.519997 c
4.280001 35.079998 4.12 33.719997 4.08 32.479996 c
4.04 31.239994 4 30.079996 4 28.839996 c
4 27.599997 4.04 26.439997 4.08 25.199997 c
1.52 25.199997 l
0.76 25.199997 0.4 24.799997 0.4 24.039997 c
0.4 23.279997 0.76 22.879997 1.52 22.879997 c
4.160001 22.879997 l
4.200001 21.559998 4.240001 20.239998 4.360001 18.919998 c
4.52 14.999998 l
4.52 14.319998 5.72 14.159998 6.240001 14.159998 c
6.680001 14.159998 7.080001 14.239998 7.480001 14.359998 c
7.840001 14.479998 8 14.719997 7.960001 14.999998 c
7.840001 18.919998 l
7.720001 22.879997 l
10.6 22.879997 l
11.360001 22.879997 11.72 23.279997 11.72 24.039997 c
11.72 24.799997 11.360001 25.199997 10.6 25.199997 c
7.64 25.199997 l
7.64 25.839996 l
7.52 29.319996 l
7.480001 30.479996 7.52 31.599997 7.56 32.839996 c
7.6 33.759995 7.72 34.799995 7.880001 35.959995 c
8.040001 37.119995 8.440001 38.039993 9.080001 38.799995 c
9.08 38.799999 l
h
31.48 27.799999 m
31.639999 32.119999 31.32 36.48 30.48 40.84 c
30.359999 41.599998 29.32 41.639999 28.719999 41.639999 c
28.32 41.639999 27.92 41.559998 27.519999 41.439999 c
27.159998 41.279999 26.999998 41.079998 27.039999 40.84 c
27.199999 39.959999 l
27.32 39.079998 l
25.92 40.079998 23.84 40.559998 22.119999 40.559998 c
20.919998 40.559998 19.719999 40.319996 18.519999 39.799999 c
17.359999 39.279999 16.519999 38.439999 16.079998 37.200001 c
15.719998 36.200001 15.599999 35.120003 15.719998 33.959999 c
15.959998 31.679998 16.839998 29.719999 18.359999 28.039999 c
19.919998 26.32 21.839998 25.48 24.199999 25.48 c
25.559999 25.48 26.839998 25.799999 27.999998 26.4 c
27.879997 23.719999 26.759998 16.32 23.079998 16.32 c
20.719997 16.32 17.519999 19.52 17.319998 21.879999 c
17.199997 22.639999 16.159998 22.719999 15.559998 22.719999 c
15.119998 22.719999 14.719997 22.639999 14.359998 22.48 c
13.999998 22.359999 13.799997 22.16 13.839998 21.879999 c
14.159998 17.959999 19.519999 14.519999 23.319998 14.519999 c
29.999998 14.519999 31.359997 22.519999 31.479998 27.799999 c
31.48 27.799999 l
h
19.360001 36.560001 m
19.800001 37.880001 20.720001 38.880001 22.16 38.880001 c
25.719999 38.880001 27.639999 35.040001 27.76 31.920002 c
27.76 30.920002 27.48 29.840002 26.880001 28.760002 c
26.320002 27.680002 25.440001 27.120003 24.240002 27.120003 c
21.640001 27.120003 20.120003 30.520002 19.480001 32.600002 c
19.040001 34.040001 19.000002 35.360001 19.360001 36.560001 c
h
48.52 33.439999 m
48.799999 35.639999 48.200001 37.279999 46.720001 38.360001 c
45.240002 39.440002 43.560001 40 41.68 40 c
40.279999 40 38.920002 39.68 37.560001 39.040001 c
36.240002 38.360001 35.360001 37.32 34.920002 35.880001 c
34.640003 34.920002 34.600002 33.880001 34.880001 32.720001 c
35.080002 32.040001 36.16 31.880001 36.760002 31.880001 c
37.200001 31.880001 37.68 31.960001 38.120003 32.080002 c
38.480003 32.240002 38.640003 32.440002 38.600002 32.720001 c
38.480003 33.16 38.480003 33.720001 38.52 34.440002 c
38.560001 35.280003 38.84 36.160004 39.279999 37.040001 c
39.759998 37.920002 40.52 38.360001 41.52 38.360001 c
41.720001 38.360001 l
42.84 38.32 43.639999 37.84 44.080002 36.920002 c
44.520004 36.000004 44.800003 35.040001 44.84 34.120003 c
44.84 32.280003 44.200001 30.800003 42.959999 29.680002 c
41.719997 28.560001 40.399998 27.640003 38.919998 26.880003 c
38.039997 26.400003 37.239998 25.920002 36.559998 25.440002 c
35.799999 24.920002 35.239998 24.200003 34.919998 23.280003 c
34.559998 22.320004 34.559998 21.320004 34.879997 20.320004 c
35.319996 18.680004 36.359997 17.160004 37.919998 15.840004 c
39.519997 14.480004 41.199997 13.800004 42.959999 13.800004 c
45.360001 13.800004 47.52 15.160004 48.119999 17.560003 c
48.360001 18.760004 48.48 19.800003 48.52 20.640003 c
48.52 20.920004 48.32 21.160004 47.959999 21.280003 c
47.559998 21.440002 47.119999 21.520002 46.68 21.520002 c
46.240002 21.520002 45.799999 21.440002 45.439999 21.280003 c
45.039997 21.160002 44.84 20.920002 44.84 20.640003 c
44.799999 20.360003 44.799999 19.920004 44.759998 19.400003 c
44.719997 19.000004 44.639999 18.480003 44.48 17.800003 c
44.32 17.240004 44.119999 16.760002 43.880001 16.400003 c
43.600002 16.040003 43.240002 15.840003 42.84 15.840003 c
42.360001 15.840003 41.880001 16.080004 41.360001 16.520002 c
39.880001 17.920002 38.920002 19.120003 38.440002 21.160002 c
38.120003 22.480001 38.520004 23.600002 39.640003 24.520002 c
40.480003 25.280003 41.440002 25.840002 42.480003 26.280003 c
43.920002 26.960003 45.240002 27.880003 46.440002 29.120003 c
47.640003 30.360003 48.320004 31.800003 48.520004 33.440002 c
48.52 33.439999 l
h
64.239998 33.439999 m
64.519997 35.639999 63.919998 37.279999 62.439999 38.360001 c
60.959999 39.440002 59.279999 40 57.399998 40 c
55.999996 40 54.639999 39.68 53.279999 39.040001 c
51.959999 38.360001 51.079998 37.32 50.639999 35.880001 c
50.360001 34.920002 50.32 33.880001 50.599998 32.720001 c
50.799999 32.040001 51.879997 31.880001 52.48 31.880001 c
52.919998 31.880001 53.399998 31.960001 53.84 32.080002 c
54.200001 32.240002 54.360001 32.440002 54.32 32.720001 c
54.200001 33.16 54.200001 33.720001 54.239998 34.440002 c
54.279999 35.280003 54.559998 36.160004 54.999996 37.040001 c
55.479996 37.920002 56.239998 38.360001 57.239998 38.360001 c
57.439999 38.360001 l
58.559998 38.32 59.360001 37.84 59.799999 36.920002 c
60.239998 36.000004 60.52 35.040001 60.559998 34.120003 c
60.559998 32.280003 59.919998 30.800003 58.679996 29.680002 c
57.439995 28.560001 56.119995 27.640003 54.639996 26.880003 c
53.759995 26.400003 52.959995 25.920002 52.279995 25.440002 c
51.519997 24.920002 50.959995 24.200003 50.639996 23.280003 c
50.279995 22.320004 50.279995 21.320004 50.599995 20.320004 c
51.039993 18.680004 52.079994 17.160004 53.639996 15.840004 c
55.239994 14.480004 56.919994 13.800004 58.679996 13.800004 c
61.079998 13.800004 63.239998 15.160004 63.839996 17.560003 c
64.079994 18.760004 64.199997 19.800003 64.239998 20.640003 c
64.239998 20.920004 64.040001 21.160004 63.679996 21.280003 c
63.279995 21.440002 62.839996 21.520002 62.399998 21.520002 c
61.959999 21.520002 61.519997 21.440002 61.159996 21.280003 c
60.759995 21.160002 60.559998 20.920002 60.559998 20.640003 c
60.519997 20.360003 60.519997 19.920004 60.479996 19.400003 c
60.439995 19.000004 60.359997 18.480003 60.199997 17.800003 c
60.039997 17.240004 59.839996 16.760002 59.599998 16.400003 c
59.32 16.040003 58.959999 15.840003 58.559998 15.840003 c
58.079998 15.840003 57.599998 16.080004 57.079998 16.520002 c
55.599998 17.920002 54.639999 19.120003 54.159996 21.160002 c
53.839996 22.480001 54.239998 23.600002 55.359997 24.520002 c
56.199997 25.280003 57.159996 25.840002 58.199997 26.280003 c
59.639996 26.960003 60.959995 27.880003 62.159996 29.120003 c
63.359997 30.360003 64.039993 31.800003 64.239998 33.440002 c
64.239998 33.439999 l
h
78.080002 34.040001 m
78.32 33.68 78.840004 33.52 79.639999 33.52 c
80.159996 33.52 80.639999 33.600002 81.080002 33.760002 c
81.520004 33.920002 81.599998 34.160004 81.400002 34.440002 c
80.480003 35.880001 79.360001 37.240002 78 38.480003 c
76.760002 39.640003 75.160004 40.200005 73.160004 40.200005 c
70.68 40.200005 68.840004 39.400005 67.68 37.760006 c
66.519997 36.120007 65.919998 34.200005 65.879997 32.000008 c
65.839996 30.680008 65.919998 29.440008 66.159996 28.200008 c
67.039993 23.680008 69.639999 14.560008 75.519997 14.560008 c
77.959999 14.560008 79.559998 15.640008 80.32 17.840008 c
80.599998 18.760008 80.68 19.800007 80.559998 20.880009 c
79.799995 26.200008 74.519997 29.520008 69.439995 29.640009 c
69.319992 30.800009 69.319992 31.960009 69.439995 33.12001 c
69.559998 34.12001 69.879997 35.240009 70.399994 36.44001 c
70.919991 37.640011 71.799995 38.320011 72.999992 38.44001 c
74.279991 38.44001 75.319992 37.92001 76.079994 36.840012 c
76.839996 35.840012 77.479996 34.920013 78.079994 34.040012 c
78.080002 34.040001 l
h
72.559998 19.799999 m
71.959999 20.959999 l
70.839996 23.24 70.080002 25.599998 69.639999 28.039999 c
71.440002 27.839998 73 27.119999 74.32 25.879999 c
75.68 24.639999 76.599998 23.119999 77.040001 21.4 c
77.32 20.360001 77.360001 19.4 77.200005 18.559999 c
77.160004 18.16 76.960007 17.68 76.640007 17.119999 c
76.360008 16.519999 75.960007 16.24 75.480003 16.24 c
74.920006 16.280001 74.360001 16.76 73.760002 17.68 c
73.200005 18.559999 72.800003 19.280001 72.560005 19.799999 c
72.559998 19.799999 l
h
99.400002 22.4 m
99.599998 24.039999 99.68 25.6 99.560005 27.039999 c
99.360008 29.919998 99.120003 32.879997 97.880005 35.559998 c
96.760002 37.999996 94.200005 39.639999 91.480003 39.639999 c
89.840004 39.639999 88.360001 39.16 87.040001 38.16 c
85.720001 37.16 84.879997 35.84 84.440002 34.239998 c
84.040001 32.759998 83.880005 31.239998 84 29.719997 c
84.32 24.599998 85.040001 15.519998 91.959999 15.519998 c
94.040001 15.519998 95.720001 16.159998 97 17.479998 c
98.32 18.799997 99.120003 20.439999 99.400002 22.399998 c
99.400002 22.4 l
h
96 29.040001 m
96.080002 26 l
96.120003 24.92 96.080002 23.84 96.040001 22.68 c
95.959999 21.52 95.599998 20.360001 94.919998 19.24 c
94.279999 18.08 93.279999 17.52 91.919998 17.52 c
91.479996 17.52 90.959999 17.76 90.439995 18.200001 c
88.199997 21.360001 87.799995 25.16 87.519997 28.880001 c
87.479996 29.920002 87.479996 30.960001 87.519997 32.040001 c
87.599998 34 88.279999 35.68 89.519997 37 c
90.079994 37.599998 90.719994 37.919998 91.399994 37.919998 c
91.759995 37.919998 92.159996 37.799999 92.519997 37.599998 c
93.839996 36.759998 94.759995 35.48 95.199997 33.799999 c
95.68 32.119999 95.959999 30.519999 96 29.039999 c
96 29.040001 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
